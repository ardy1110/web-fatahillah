// This is your Prisma schema file
// Learn more: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User { 
  id       String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username String @unique
  password String 
}

model Store {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  description String?
  address     String?
  phoneNumber String?
  imageUrl    String?
  // Relasi: Satu toko memiliki banyak kategori
  categories  Category[]
  // Relasi: Satu toko memiliki banyak produk (jika produk tidak harus terikat kategori)
  products    Product[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Category {
  id        Int        @id @default(autoincrement())
  name      String
  imageUrl  String?

  // Kategori terikat pada satu Toko
  storeId   Int
  store     Store      @relation(fields: [storeId], references: [id], onDelete: Cascade)
  // Relasi: Satu kategori memiliki banyak produk
  products  Product[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  // Memastikan kombinasi nama kategori dan storeId unik
  @@unique([name, storeId])
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  description String?
  // Menggunakan Decimal untuk presisi harga yang lebih baik
  price       Int
  imageUrl    String? 
  isAvailable Boolean    @default(true)

  // Relasi ke kategori (opsional, jika produk boleh tanpa kategori)
  categoryId  Int?
  category    Category?  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  
  // Relasi ke toko
  storeId     Int
  store       Store      @relation(fields: [storeId], references: [id], onDelete: Cascade)

  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}